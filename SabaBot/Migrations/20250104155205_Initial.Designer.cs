// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SabaBot.Database;

#nullable disable

namespace SabaBot.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250104155205_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.6.24327.4");

            modelBuilder.Entity("SabaBot.Database.GuildSettings", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.HasKey("GuildId");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("SabaBot.Database.GuildSettings", b =>
                {
                    b.OwnsOne("SabaBot.Database.ReactionChampSettings", "ReactionChampSettings", b1 =>
                        {
                            b1.Property<ulong>("GuildSettingsGuildId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("EmoteId")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("Enabled")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("ReactionThreshold")
                                .HasColumnType("INTEGER");

                            b1.HasKey("GuildSettingsGuildId");

                            b1.ToTable("Guilds");

                            b1.WithOwner()
                                .HasForeignKey("GuildSettingsGuildId");

                            b1.OwnsMany("SabaBot.Database.RewindMessage", "DeletedMessages", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("INTEGER");

                                    b2.Property<ulong>("AuthorId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<ulong>("ReactionChampSettingsGuildSettingsGuildId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Text")
                                        .IsRequired()
                                        .HasMaxLength(1000)
                                        .HasColumnType("TEXT");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ReactionChampSettingsGuildSettingsGuildId");

                                    b2.ToTable("Guilds_DeletedMessages");

                                    b2.WithOwner()
                                        .HasForeignKey("ReactionChampSettingsGuildSettingsGuildId");
                                });

                            b1.Navigation("DeletedMessages");
                        });

                    b.OwnsOne("SabaBot.Database.RewardSettings", "RewardSettings", b1 =>
                        {
                            b1.Property<ulong>("GuildSettingsGuildId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("RewardClanTag")
                                .HasMaxLength(5)
                                .HasColumnType("TEXT");

                            b1.HasKey("GuildSettingsGuildId");

                            b1.ToTable("Guilds");

                            b1.WithOwner()
                                .HasForeignKey("GuildSettingsGuildId");

                            b1.OwnsOne("SabaBot.Database.DiscordMessage", "MessageTemplate", b2 =>
                                {
                                    b2.Property<ulong>("RewardSettingsGuildSettingsGuildId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Content")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.HasKey("RewardSettingsGuildSettingsGuildId");

                                    b2.ToTable("Guilds");

                                    b2.WithOwner()
                                        .HasForeignKey("RewardSettingsGuildSettingsGuildId");

                                    b2.OwnsMany("SabaBot.Database.DiscordAttachment", "Attachments", b3 =>
                                        {
                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("INTEGER");

                                            b3.Property<ulong>("DiscordMessageRewardSettingsGuildSettingsGuildId")
                                                .HasColumnType("INTEGER");

                                            b3.Property<string>("FileName")
                                                .IsRequired()
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("FileUrl")
                                                .IsRequired()
                                                .HasColumnType("TEXT");

                                            b3.HasKey("Id");

                                            b3.HasIndex("DiscordMessageRewardSettingsGuildSettingsGuildId");

                                            b3.ToTable("DiscordAttachment");

                                            b3.WithOwner()
                                                .HasForeignKey("DiscordMessageRewardSettingsGuildSettingsGuildId");
                                        });

                                    b2.Navigation("Attachments");
                                });

                            b1.Navigation("MessageTemplate");
                        });

                    b.OwnsOne("SabaBot.Database.RewindSettings", "RewindSettings", b1 =>
                        {
                            b1.Property<ulong>("GuildSettingsGuildId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("AutomaticRepliesCooldown")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("CooldownCounter")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("EnableAutomaticReplies")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("EnablePingReplies")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("MessagesThreshold")
                                .HasColumnType("INTEGER");

                            b1.HasKey("GuildSettingsGuildId");

                            b1.ToTable("Guilds");

                            b1.WithOwner()
                                .HasForeignKey("GuildSettingsGuildId");

                            b1.OwnsMany("SabaBot.Database.RewindMessage", "Messages", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("INTEGER");

                                    b2.Property<ulong>("AuthorId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<ulong>("RewindSettingsGuildSettingsGuildId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Text")
                                        .IsRequired()
                                        .HasMaxLength(1000)
                                        .HasColumnType("TEXT");

                                    b2.HasKey("Id");

                                    b2.HasIndex("RewindSettingsGuildSettingsGuildId");

                                    b2.ToTable("Guilds_Messages");

                                    b2.WithOwner()
                                        .HasForeignKey("RewindSettingsGuildSettingsGuildId");
                                });

                            b1.Navigation("Messages");
                        });

                    b.Navigation("ReactionChampSettings")
                        .IsRequired();

                    b.Navigation("RewardSettings")
                        .IsRequired();

                    b.Navigation("RewindSettings")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
